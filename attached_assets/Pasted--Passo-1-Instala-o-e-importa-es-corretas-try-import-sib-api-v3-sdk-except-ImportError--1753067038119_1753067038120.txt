# Passo 1: Instalação e importações corretas
try:
    import sib_api_v3_sdk
except ImportError:
    print("Instalando a biblioteca da Brevo...")
    !pip install sib_api_v3_sdk

# CORREÇÃO: As importações devem estar no topo para garantir que sejam carregadas.
import sib_api_v3_sdk
import base64  # <--- CORREÇÃO: Importação que faltou.
import os
from sib_api_v3_sdk.rest import ApiException
from pprint import pprint

# --- INÍCIO DA CONFIGURAÇÃO ---
configuration = sib_api_v3_sdk.Configuration()
configuration.api_key['api-key'] = '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'

# ATUALIZAÇÃO: Usando o remetente que você especificou.
# Lembre-se que o e-mail 'cavalcantisilvav@gmail.com' deve estar verificado na sua conta Brevo.
remetente_verificado = {"name": "Vitor", "email": "cavalcantisilvav@gmail.com"}
# --- FIM DA CONFIGURAÇÃO ---


# --- COLETA DAS INFORMAÇÕES ---
print("--- Preparando para enviar um novo e-mail com anexo ---")
destinatario_email = input("Digite o e-mail do DESTINATÁRIO: ")
destinatario_nome = input("Digite o nome do DESTINATÁRIO: ")
assunto = input("Digite o ASSUNTO do e-mail: ")
conteudo_texto = input("Digite o conteúdo da mensagem: ")
html_para_enviar = f"<html><body><p>{conteudo_texto}</p></body></html>"
nome_arquivo_anexo = input("Digite o nome EXATO do arquivo para anexar (ex: testeemail.txt): ")

# --- PROCESSAMENTO DO ANEXO ---
anexo = None
try:
    # Abre o arquivo em modo de leitura binária ('rb')
    with open(nome_arquivo_anexo, 'rb') as f:
        dados_arquivo = f.read()
        # Codifica o conteúdo do arquivo em Base64
        arquivo_encodado = base64.b64encode(dados_arquivo).decode('utf-8')

    # Cria o objeto de anexo que a API espera
    anexo = [{"name": nome_arquivo_anexo, "content": arquivo_encodado}]
    print(f"\nArquivo '{nome_arquivo_anexo}' processado e pronto para anexar.")

except FileNotFoundError:
    print(f"\n❌ ERRO: Arquivo '{nome_arquivo_anexo}' não encontrado. Verifique o nome e se o upload foi concluído.")
    exit() # Interrompe o script se o arquivo não for encontrado
except Exception as e:
    print(f"\n❌ ERRO ao processar o arquivo: {e}")
    exit() # Interrompe o script se houver outro erro


# --- ENVIO DO E-MAIL ---
if anexo:
    print("\n--- Enviando E-mail ---")
    
    api_instance = sib_api_v3_sdk.TransactionalEmailsApi(sib_api_v3_sdk.ApiClient(configuration))
    to = [{"email": destinatario_email, "name": destinatario_nome}]

    send_smtp_email = sib_api_v3_sdk.SendSmtpEmail(
        to=to,
        html_content=html_para_enviar,
        sender=remetente_verificado,
        subject=assunto,
        attachment=anexo
    )

    try:
        api_response = api_instance.send_transac_email(send_smtp_email)
        print("\n✅ SUCESSO! A API da Brevo aceitou o e-mail com anexo para envio.")
        pprint(api_response)
    except ApiException as e:
        print(f"\n❌ ERRO na API: Ocorreu uma exceção ao enviar o e-mail: {e}")